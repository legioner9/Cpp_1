/* Задана функция f(x). В равностоящих точках вычислить значения функции f(x). Аргумент меняется в диапазоне:
a ≤ x ≤ b.
Границы интервала a, b и количество точек n ввести с клавиатуры.

f(x) = (1 – e^x) sin(4πx)
Подсчитать сумму тех значений функции, дробная часть которых < 0.8 */


#include <iostream>
#include <vector>
#include <cmath>

double f(double x)
{
    return 1.0 + sin(4 * 3.14159265 * x);
}

int main()
{
    // массив значение, куда записывается f(x)
    std::vector<double> arr;
    double a, b, n;
    double sum = 0;
    std::cout << "Enter a, b and n\n";
    // вводим значения с клавиатуры
    std::cin >> a >> b >> n;

    // вычисляем интервал от 'a' к 'b'
    double range = abs(a) + abs(b);
    // вычисляем размер шага, чтобы расставить нужно количество точек
    double step = range / (n - 1.0);
    // проходимся по каждой точке 'i' и вычисляем её функцию
    for (auto i = a; i <= b; i += step)
    {
        // записываем результат функции в массив
        std::cout << "is f(i) = " << f(i);
        arr.push_back(f(i));
    }
    // проходимся по каждому элементу массива и вычисляем дробную часть
    for (auto &i : arr)
    {
        // суммируем значения функции для каждой точки 'i' дробная часть которой < 0.5
        std::cout << i << " ";
        double frac;
        double in;
        if (modf(i, &in) < 0.5)
        {
            std::cout << "f(i) = " << f(i);
            sum += f(i);
            std::cout << "sum = " << sum;
        }
    }
}